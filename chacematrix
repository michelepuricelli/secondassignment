.Rproj.user
.Rhistory
.RData
.Ruserdata


## Put comments here that give an overall description of what your
## functions do

## Write a short comment describing this function

makeCacheMatrix <- function(x = matrix()) {inv <- NULL  # initialize inverse to NULL

# Set the value of the matrix
set <- function(y) {
                x <<- y  # use <<- operator to assign value to parent environment
                inv <<- NULL  # invalidate cache
}

# Get the value of the matrix
get <- function() {
                x  # return the value of the matrix
}

# Set the value of the inverse
setInverse <- function(inverse) {
                inv <<- inverse  # cache the inverse
}

# Get the value of the inverse
getInverse <- function() {
                inv  # return the cached inverse
}

# Return a list of functions
list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}



## Write a short comment describing this function

cacheSolve <- function(x, ...) {inv <- x$getInverse()  # try to retrieve the inverse from cache

if (!is.null(inv)) {  # if inverse is cached
                message("getting cached data")
                return(inv)  # return cached inverse
}

data <- x$get()  # retrieve matrix from cache
inv <- solve(data, ...)  # compute the inverse
x$setInverse(inv)  # cache the inverse

inv  # return the inverse
        ## Return a matrix that is the inverse of 'x'
}
